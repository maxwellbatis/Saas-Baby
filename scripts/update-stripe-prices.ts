import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function updateStripePrices() {
  console.log('üîÑ Atualizando IDs dos pre√ßos do Stripe...\n');

  try {
    // Listar todos os planos atuais
    const plans = await prisma.plan.findMany({
      where: { isActive: true }
    });

    console.log('üìã Planos encontrados:');
    plans.forEach(plan => {
      console.log(`- ${plan.name}: ${plan.stripePriceId} (R$ ${plan.price})`);
    });

    console.log('\n‚ö†Ô∏è  ATEN√á√ÉO:');
    console.log('1. Acesse o Stripe Dashboard em modo LIVE');
    console.log('2. V√° em Produtos > Pre√ßos');
    console.log('3. Crie novos pre√ßos para cada plano (ou use existentes)');
    console.log('4. Copie os IDs dos pre√ßos (come√ßam com "price_")');
    console.log('5. Atualize os IDs no banco de dados\n');

    // Exemplo de como atualizar (descomente e ajuste os IDs)
    /*
    await prisma.plan.updateMany({
      where: { name: 'B√°sico' },
      data: { stripePriceId: 'price_NOVO_ID_AQUI' }
    });

    await prisma.plan.updateMany({
      where: { name: 'Premium' },
      data: { stripePriceId: 'price_NOVO_ID_AQUI' }
    });

    await prisma.plan.updateMany({
      where: { name: 'Familiar' },
      data: { stripePriceId: 'price_NOVO_ID_AQUI' }
    });
    */

    console.log('‚úÖ Script executado com sucesso!');
    console.log('üìù Lembre-se de atualizar os IDs dos pre√ßos no c√≥digo acima.');

  } catch (error) {
    console.error('‚ùå Erro:', error);
  } finally {
    await prisma.$disconnect();
  }
}

updateStripePrices(); 